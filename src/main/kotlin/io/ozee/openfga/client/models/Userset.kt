/**
 * OpenFGA
 *
 * A high performance and flexible authorization/permission engine built for developers and inspired by Google Zanzibar.
 *
 * The version of the OpenAPI document: 0.1
 * Contact: community@openfga.dev
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.ozee.openfga.client.models

import io.ozee.openfga.client.models.Difference
import io.ozee.openfga.client.models.ObjectRelation
import io.ozee.openfga.client.models.TupleToUserset
import io.ozee.openfga.client.models.Usersets

import com.squareup.moshi.Json
import java.io.Serializable

/**
 * 
 *
 * @param `this` A DirectUserset is a sentinel message for referencing the direct members specified by an object/relation mapping.
 * @param computedUserset 
 * @param tupleToUserset 
 * @param union 
 * @param intersection 
 * @param difference 
 */

data class Userset (

    /* A DirectUserset is a sentinel message for referencing the direct members specified by an object/relation mapping. */
    @Json(name = "this")
    val `this`: kotlin.Any? = null,

    @Json(name = "computedUserset")
    val computedUserset: ObjectRelation? = null,

    @Json(name = "tupleToUserset")
    val tupleToUserset: TupleToUserset? = null,

    @Json(name = "union")
    val union: Usersets? = null,

    @Json(name = "intersection")
    val intersection: Usersets? = null,

    @Json(name = "difference")
    val difference: Difference? = null

) : Serializable {
    companion object {
        private const val serialVersionUID: Long = 123
    }

}

